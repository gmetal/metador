plugins {
    id "com.android.library"
    id "kotlin-android"
    id "de.mannodermaus.android-junit5"
    id "org.jetbrains.dokka" version "$dokkaVersion"
}
apply from: "$project.rootDir/spotless.gradle"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion rootProject.ext.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
    namespace "dev.gmetal.metador"
}

dokkaHtml {
    moduleName.set("Metador")
    offlineMode.set(true)
    dokkaSourceSets {
        main {
            displayName.set("main")
            includes.from("description.md")
            jdkVersion.set(8)
            suppress.set(false)
            platform.set(org.jetbrains.dokka.Platform.jvm)
            noStdlibLink.set(false)
            noJdkLink.set(false)
            noAndroidSdkLink.set(false)
        }
    }
}

dokkaJavadoc {
    moduleName.set("Metador")
    offlineMode.set(true)
    dokkaSourceSets {
        main {
            displayName.set("main")
            includes.from("description.md")
            jdkVersion.set(8)
            suppress.set(false)
            platform.set(org.jetbrains.dokka.Platform.jvm)
            noStdlibLink.set(false)
            noJdkLink.set(false)
            noAndroidSdkLink.set(false)
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "org.jsoup:jsoup:1.13.1"
    implementation "androidx.annotation:annotation:1.2.0-rc01"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "com.michael-bull.kotlin-result:kotlin-result:$kotlinResultVersion"

    // Kotest dependencies
    testImplementation "io.kotest:kotest-runner-junit5:$kotestVersion"
    testImplementation "io.kotest:kotest-assertions-core:$kotestVersion"
    testImplementation "io.kotest:kotest-extensions-junitxml:$kotestVersion"
    testImplementation "io.kotest.extensions:kotest-extensions-mockserver:1.0.0"

    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation "com.michael-bull.kotlin-result:kotlin-result:$kotlinResultVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "org.slf4j:slf4j-simple:$slf4jVersion"
    testImplementation "org.slf4j:slf4j-api:$slf4jVersion"
    testImplementation "io.mockk:mockk-agent-jvm:1.12.0"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:1.5.21"
    testImplementation "org.jdom:jdom2:2.0.6"
}

task archiveSources(type: Jar) {
//    classifier("sources")
    from android.sourceSets.main.java.srcDirs
    exclude("dev/gmetal/metador/response")
}


task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    group "publishing"
    description "Generates javadoc.jar based on Dokka-generated documentation"
    archiveClassifier.set("javadoc")
    from dokkaJavadoc.outputDirectory
}
